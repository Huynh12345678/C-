#include <GL/gl.h>
#include <GL/glut.h>

GLubyte rasters[] = {
	0x00,0x00,0x00,0x03,0xc0,0x00,0x00,
	0x00,0x00,0x00,0x02,0x60,0x00,0x00,
	0x00,0x00,0x00,0x02,0x20,0x00,0x00,
	0x00,0x00,0x00,0x03,0x20,0x00,0x00,
	0x00,0x00,0x00,0x01,0x20,0x00,0x00,
	0x00,0x00,0x00,0x01,0xa0,0x00,0x00,
	0x07,0xc0,0x00,0x00,0xe0,0x80,0x00,
	0x04,0x43,0x84,0x04,0x30,0x98,0x88,
	0x0c,0x42,0xee,0x67,0x28,0x9c,0x8c,
	0x08,0x46,0x3b,0x75,0xa4,0xb6,0x8e,
	0x08,0xc4,0x19,0xcc,0xe6,0xa1,0xca,
	0x08,0xb4,0x08,0xcc,0x63,0xe0,0xc9,
	0x0c,0x94,0x08,0x44,0x01,0xe0,0xe9,
	0x07,0x94,0x00,0x00,0x00,0x00,0xb8,
	0x00,0x3f,0x80,0x00,0x00,0x00,0xc0,
	0x00,0x94,0x60,0x00,0x00,0x00,0xa0,
	0x1c,0x94,0x18,0x00,0x00,0x00,0x90,
	0x14,0x12,0x08,0x00,0x00,0x00,0xd0,
	0x3c,0x9b,0x04,0x00,0x00,0x00,0x48,
	0x33,0xc1,0xfc,0x00,0x00,0x00,0x48,
	0x1e,0x60,0x00,0x00,0x00,0x00,0x78	
};

void display(void){
	glClear (GL_COLOR_BUFFER_BIT);
	glColor3f (1.0, 1.0, 1.0);
	glRasterPos2i (10, 10);
	glBitmap(56, 21, 0.0, 0.0, 11.0, 0.0, rasters);
	glFlush ();
}
void init (void) {
	glPixelStorei (GL_UNPACK_ALIGNMENT, 1);
   	glClearColor (0.0, 0.0, 0.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(0.0, 70.0, 0.0, 70.0, -1.0, 1.0);
}
int main(int argc, char** argv){
	glutInit(&argc, argv);
	glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize (200, 200);
	glutInitWindowPosition (100, 100);
	glutCreateWindow ("HUYNH");
	init ();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
